/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package editor;

import editor.bodyEditor.BodyUI;
import editor.common.CustomFileFilter;
import editor.common.EditorPanel;
import editor.convexEditor.ConvexObjUI;
import editor.heighMapEditor.HeightMapUI;
import java.awt.BorderLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * Hlavni okno programu
 * @author ggrrin_
 */
public class EditorWindow extends javax.swing.JFrame {

    /**
     * panel ktery je momentalne zobrazeny
     */
    EditorPanel currentMode = null;
    
    /**
     * momentalne zobrazene menu panelu
     */
    JMenu currentMenu = null;

    /**
     * Creates new form EditorWindow
     */
    public EditorWindow() {
        initComponents();
        //selectPanel(new HeightMapUI(this));
        //setContentPane(new Test());
        
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                if (selectPanel(null)) {
                    System.exit(0);
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1024, 800));
        setPreferredSize(new java.awt.Dimension(1024, 800));

        jMenu1.setText("File");

        jMenuItem1.setText("Novy...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Otevrit...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Ukoncit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 539, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Otevreni novyeho panelu
     * @param evt 
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        final String a = "Konvexni objekt";
        final String b = "Obecny objekt";
        final String c = "Vyskova mapa";
        String[] possibilities = {a, b, c};
        String s = (String) JOptionPane.showInputDialog(
                this,
                "Vyber panel:",
                "Novy...",
                JOptionPane.PLAIN_MESSAGE,
                null,
                possibilities,
                possibilities[0]);

        if (s != null) {
            switch (s) {
                case a:
                    selectPanel(new ConvexObjUI(this));
                    break;
                case b:
                    selectPanel(new BodyUI(this));
                    break;
                case c:
                    selectPanel(new HeightMapUI(this));
                    break;
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    /**
     * ukonceni prgramu
     * @param evt 
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        if (selectPanel(null)) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    
    /**
     * otevreni souboru podle typu
     * @param evt 
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new CustomFileFilter("Editor formats .cob .bob .mob", "cob", "bob", "mob"));

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();

            boolean open = false;

            switch (CustomFileFilter.getExtension(file.getPath())) {
                case "cob":
                    open = selectPanel(new ConvexObjUI(this));
                    break;

                case "bob":
                    open = selectPanel(new BodyUI(this));
                    break;

                case "mob":
                    open = selectPanel(new HeightMapUI(this));
                    break;
            }

            if (open) {
                currentMode.openFile(file);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditorWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditorWindow w = new EditorWindow();
                w.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    // End of variables declaration//GEN-END:variables

    public boolean selectPanel(EditorPanel pan) {
        if (pan != null && pan == currentMode) {
            throw new IllegalStateException();
        }

        if (currentMode != null && !currentMode.dispose()) {
            return false;
        }

        //remove old       
        if (currentMenu != null) {
            jMenuBar1.remove(currentMenu);
        }

        //setup new  
        if (pan != null) {
            setContentPane(currentMode = pan);
            jMenuBar1.add(currentMenu = pan.getPanelMenu());
        } else {
            setContentPane(new JPanel(new BorderLayout()));
            currentMode = null;
            currentMenu = null;
        }

        jMenuBar1.invalidate();
        jMenuBar1.repaint();

        invalidate();
        repaint();

        return true;
    }
}
